<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on The Plone Expanse</title>
    <link>/tags/programming/</link>
    <description>Recent content in Programming on The Plone Expanse</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>@2017 Tiberiu Ichim</copyright>
    <lastBuildDate>Wed, 06 Sep 2017 18:30:18 +0100</lastBuildDate>
    
	<atom:link href="/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Identifying and fixing broken objects in a Plone website</title>
      <link>/blog/2017/09/06/identifying-and-fixing-broken-objects-in-a-plone-website/</link>
      <pubDate>Wed, 06 Sep 2017 18:30:18 +0100</pubDate>
      
      <guid>/blog/2017/09/06/identifying-and-fixing-broken-objects-in-a-plone-website/</guid>
      <description>I&amp;rsquo;ve removed plone.app.stagingbehavior from a website because the new plone.app.iterate has the same functionality. In addition, the p.a.s package was overriding adapters that I wanted to write.
Now, my problem was that I could no longer save any related items, I would get an error:
Module ZPublisher.Publish, line 138, in publish Module ZPublisher.mapply, line 77, in mapply Module ZPublisher.Publish, line 48, in call_object Module plone.z3cform.layout, line 66, in __call__ Module plone.</description>
    </item>
    
    <item>
      <title>Editing Short python scripts with vim</title>
      <link>/blog/2017/01/18/editing-short-python-scripts-with-vim/</link>
      <pubDate>Wed, 18 Jan 2017 18:30:18 +0100</pubDate>
      
      <guid>/blog/2017/01/18/editing-short-python-scripts-with-vim/</guid>
      <description>Being that I usually find interesting to know about other people&amp;rsquo;s workflow, here&amp;rsquo;s a short description of my working environment that I typically use when developing in Python:
tmux In the beginning I&amp;rsquo;ve used Yakuake tabs to split servers and files in separate tabs. As the number grew, I&amp;rsquo;ve started naming the tabs (and even had a short stint extending Yakuake to fit this use case), but as the number of projects and environments that I have to juggle kept growing, I&amp;rsquo;ve resorted to splitting each separate tab into &amp;ldquo;subtabs&amp;rdquo;, using tmux.</description>
    </item>
    
    <item>
      <title>Get a project imported into subversion and start working imediately on it</title>
      <link>/blog/2009/11/09/get-a-project-imported-into-subversion-and-start-working-imediately-on-it/</link>
      <pubDate>Mon, 09 Nov 2009 20:54:51 -0200</pubDate>
      
      <guid>/blog/2009/11/09/get-a-project-imported-into-subversion-and-start-working-imediately-on-it/</guid>
      <description>I managed to figure out how to beat one awkward piece of workflow when starting new project: I always start hacking on a project, then I notice that I haven&#39;t been working on a svn checkout (it&#39;s the chicken or the egg problem). So I need to do a svn import, delete my copy of the project, checkout the svn version and start hacking at my project again. This workaround is agravated, though, when working with buildouts.</description>
    </item>
    
  </channel>
</rss>
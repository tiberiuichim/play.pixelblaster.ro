<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on The Plone Expanse</title>
    <link>/tags/vim/</link>
    <description>Recent content in Vim on The Plone Expanse</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>@2016 Tiberiu Ichim</copyright>
    <lastBuildDate>Wed, 18 Jan 2017 18:30:18 +0100</lastBuildDate>
    
	<atom:link href="/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Editing Short python scripts with vim</title>
      <link>/blog/2017/01/18/editing-short-python-scripts-with-vim/</link>
      <pubDate>Wed, 18 Jan 2017 18:30:18 +0100</pubDate>
      
      <guid>/blog/2017/01/18/editing-short-python-scripts-with-vim/</guid>
      <description>Being that I usually find interesting to know about other people&amp;rsquo;s workflow, here&amp;rsquo;s a short description of my working environment that I typically use when developing in Python:
tmux In the beginning I&amp;rsquo;ve used Yakuake tabs to split servers and files in separate tabs. As the number grew, I&amp;rsquo;ve started naming the tabs (and even had a short stint extending Yakuake to fit this use case), but as the number of projects and environments that I have to juggle kept growing, I&amp;rsquo;ve resorted to splitting each separate tab into &amp;ldquo;subtabs&amp;rdquo;, using tmux.</description>
    </item>
    
    <item>
      <title>Auto-bootstrap (n)vim configuration</title>
      <link>/blog/2017/01/05/auto-bootstrap-nvim-configuration/</link>
      <pubDate>Thu, 05 Jan 2017 19:01:08 -0100</pubDate>
      
      <guid>/blog/2017/01/05/auto-bootstrap-nvim-configuration/</guid>
      <description>Ever since I&#39;ve moved to Neovim and redid my whole setup, I&#39;ve had this piece of code at the top of my init.vim:
if empty(glob(&#39;~/.config/nvim/autoload/plug.vim&#39;)) silent !curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim autocmd VimEnter * PlugInstall | source $MYVIMRC endif  Together with the rest of that dotfile, it automatically bootstraps the whole plugins install process, which makes moving to a new machine a simple operation of just cloning the repo in the proper location, start once Neovim to let it bootstrap, then boom, everything fits in place.</description>
    </item>
    
  </channel>
</rss>
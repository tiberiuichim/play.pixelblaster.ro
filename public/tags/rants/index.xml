<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rants on The Plone Expanse</title>
    <link>/tags/rants/</link>
    <description>Recent content in Rants on The Plone Expanse</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>@2019 Tiberiu Ichim</copyright>
    <lastBuildDate>Mon, 02 Jan 2017 09:46:35 -0100</lastBuildDate>
    
	<atom:link href="/tags/rants/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Django templates make me go mad...</title>
      <link>/blog/2017/01/02/django-templates-make-me-go-mad.../</link>
      <pubDate>Mon, 02 Jan 2017 09:46:35 -0100</pubDate>
      
      <guid>/blog/2017/01/02/django-templates-make-me-go-mad.../</guid>
      <description>Why is this a positive thing? Excerpt from Django Oscar, an eComerce framework.
&amp;lt;li class=&#34;step2 {% if step == 2 %}active{% else %}{% if step == 3 %}previous{% else %}{% if step &amp;gt; 2 %}visited{% else %}disabled{% endif %}{% endif %}{% endif %} &#34;&amp;gt; Gah...</description>
    </item>
    
    <item>
      <title>Always fun, deciphering Ruby DSLs (part 1)</title>
      <link>/blog/2016/12/24/always-fun-deciphering-ruby-dsls-part-1/</link>
      <pubDate>Sat, 24 Dec 2016 08:47:35 -0100</pubDate>
      
      <guid>/blog/2016/12/24/always-fun-deciphering-ruby-dsls-part-1/</guid>
      <description>I never back down from a new system or programming language and thankfully my daily work has exposed me to some Ruby and Rails code. So I&#39;ve been learning some, just enough to be able to tweak code, fix bugs and make minor additions. I&#39;m not a fan of the Ruby on Rails design, but I enjoy it as a challenge.
One thing that I found difficult was writing code that uses some of the many DSLs created by the community.</description>
    </item>
    
    <item>
      <title>Version conflict: zc.buildout&#39;s version of madness</title>
      <link>/blog/2011/05/02/version-conflict-zc.buildouts-version-of-madness/</link>
      <pubDate>Mon, 02 May 2011 10:13:55 -0300</pubDate>
      
      <guid>/blog/2011/05/02/version-conflict-zc.buildouts-version-of-madness/</guid>
      <description>I&#39;m not even trying to understand what happens, because it&#39;s aggravating to see buildouts fail like this:
While: &amp;nbsp; Installing. &amp;nbsp; Getting section zope2. &amp;nbsp; Initializing section zope2. &amp;nbsp; Installing recipe plone.recipe.zope2install. Error: There is a version conflict. We already have: setuptools 0.6c9 or, worse, this:
While: &amp;nbsp; Installing. &amp;nbsp; Getting section zope2. &amp;nbsp; Initializing section zope2. &amp;nbsp; Installing recipe plone.recipe.zope2install. Error: There is a version conflict. We already have: zc.</description>
    </item>
    
    <item>
      <title>Building PIL with JPEG support on Ubuntu 11.04</title>
      <link>/blog/2011/05/01/building-pil-with-jpeg-support-on-ubuntu-11.04/</link>
      <pubDate>Sun, 01 May 2011 12:41:20 -0300</pubDate>
      
      <guid>/blog/2011/05/01/building-pil-with-jpeg-support-on-ubuntu-11.04/</guid>
      <description>I had problems building PIL with jpeg support on the latest Ubuntu. There are now two libjpeg libraries: one called libjpeg62 and one libjpeg8. Every guide on the net explaining how to compile PIL with jpeg support points to installing libjpeg62-dev. Needless to say, libjpeg8-dev is actually needed to properly build PIL. My reason for initially avoiding libjpeg8 is that it causes libsdlimage-dev to be uninstalled, so it looks like I&#39;ll have to juggle packages whenever I want to compile something that requires SDL.</description>
    </item>
    
    <item>
      <title>Can you do this on your shiny Mac?</title>
      <link>/blog/2010/02/25/can-you-do-this-on-your-shiny-mac/</link>
      <pubDate>Thu, 25 Feb 2010 12:04:41 -0200</pubDate>
      
      <guid>/blog/2010/02/25/can-you-do-this-on-your-shiny-mac/</guid>
      <description>Probably you can, but you have never done it because you have a shiny interface for everything. I&#39;m talking about this discovery of mine:
svn diff | kompare - What it does is to take the output from svn diff and pipe it into Kompare, a merge/diff utility from the KDE Project. I can do this from the command line, straight from the directory that I&#39;m in, and bang! I get a nice graphical overview, complete with the tree structure that I can navigate to see what I&#39;m about to commit.</description>
    </item>
    
    <item>
      <title>Another cause for buildout failures: system distributed Python</title>
      <link>/blog/2010/01/28/another-cause-for-buildout-failures-system-distributed-python/</link>
      <pubDate>Thu, 28 Jan 2010 21:29:31 -0200</pubDate>
      
      <guid>/blog/2010/01/28/another-cause-for-buildout-failures-system-distributed-python/</guid>
      <description>I&#39;ve had a buildout bootstrap process failure, this time a weird one, perhaps I should document the bug and report it.
The latest Ubuntu version which I have installed (Lucid Lynx) comes with a package called python-pkg-resources, which packages pkg_resources, which used to be available only through the setuptools distribution. Buildout&#39;s bootstrap.py tries to guess if Setuptools or Distribute are installed by checking the availability of pkg_resources; by guessing wrong it all comes to a crash at the end.</description>
    </item>
    
    <item>
      <title>Dear PyPi uploaders: don&#39;t use a download URL, upload your package instead!</title>
      <link>/blog/2010/01/28/dear-pypi-uploaders-dont-use-a-download-url-upload-your-package-instead/</link>
      <pubDate>Thu, 28 Jan 2010 20:57:23 -0200</pubDate>
      
      <guid>/blog/2010/01/28/dear-pypi-uploaders-dont-use-a-download-url-upload-your-package-instead/</guid>
      <description>I think this is the Python Index biggest mistake, the one which makes it unreliable for serious development environments: exposing package entries with no real package files and just a download URL. To see what I&#39;m talking about, just examine the PyPI records for BeautifulSoup or IPython, packages that are very common in buildouts. As soon as the author and publisher of that package has a hosting problem, the developer that uses that package also has a problem.</description>
    </item>
    
    <item>
      <title>A don&#39;t do for internationalizing Django templates</title>
      <link>/blog/2009/11/30/a-dont-do-for-internationalizing-django-templates/</link>
      <pubDate>Mon, 30 Nov 2009 20:36:41 -0200</pubDate>
      
      <guid>/blog/2009/11/30/a-dont-do-for-internationalizing-django-templates/</guid>
      <description>I&#39;m internationalizing a Pinax website and I&#39;ve encountered this piece of code in a template:
&amp;lt;input type=&#34;submit&#34; value=&#34;{% trans &#34;invite&#34; %}&#34;/&amp;gt; {% blocktrans %}{{ other_user }} to be a friend.{% endblocktrans %}  The message ids for this code would be two separate blocks: &#34;invite&#34; and &#34; %{other_user}s to be a friend&#34;. Both offer very little in terms of context and make the translators job difficult. Correct, in my point of view, would be the more convoluted form of:</description>
    </item>
    
    <item>
      <title>Odd thing in Django: the date filter takes PHP as reference instead of Python</title>
      <link>/blog/2009/11/30/odd-thing-in-django-the-date-filter-takes-php-as-reference-instead-of-python/</link>
      <pubDate>Mon, 30 Nov 2009 11:57:54 -0200</pubDate>
      
      <guid>/blog/2009/11/30/odd-thing-in-django-the-date-filter-takes-php-as-reference-instead-of-python/</guid>
      <description>I wonder what possible explanation there is for the behaviour of the date template filter.
Uses the same format as PHP&#39;s date() function (http://php.net/date) with some custom extensions.  I understand where Django comes from, but I think this sort of things should be more aligned with the rest of the Python world.</description>
    </item>
    
    <item>
      <title>If Django templates are an improvement over XML templates, then, by all means, please give me XML</title>
      <link>/blog/2009/11/18/if-django-templates-are-an-improvement-over-xml-templates-then-by-all-means-please-give-me-xml/</link>
      <pubDate>Wed, 18 Nov 2009 14:27:15 -0200</pubDate>
      
      <guid>/blog/2009/11/18/if-django-templates-are-an-improvement-over-xml-templates-then-by-all-means-please-give-me-xml/</guid>
      <description>I fail to see how
{% block %} ... {% endblock %}  is in any way better or &#34;less scary&#34; then, let&#39;s say
&amp;lt;dj:block&amp;gt; ... &amp;lt;/dj:block&amp;gt;  Yet another rant, this time triggered by the error I got when writing this piece of code:
{% blocktrans with offer.offerer.username as offerer_username and offer.offered_time|date as offerer_date %} ... {% endblocktrans %}  I just wanted to split the tag on multiple lines, but it seems that&#39;s not possible.</description>
    </item>
    
    <item>
      <title>The case against Django templates</title>
      <link>/blog/2009/11/17/the-case-against-django-templates/</link>
      <pubDate>Tue, 17 Nov 2009 19:00:49 -0200</pubDate>
      
      <guid>/blog/2009/11/17/the-case-against-django-templates/</guid>
      <description>I have many grudges against the django templating language and its templates (in short, I hate them), so I&#39;m gathering evidence to support what my &#34;spider sense&#34; tells me. Today the template tag system goes under fire.
Given the following template fragment:
{% load i18n %} {% load avatar_tags %} {% load voting_tags %} {% load pagination_tags %} {% load extra_voting_tags %} {% load in_filter %} {% load extra_tagging_tags %} {% load sorting_tags %} Which one is responsible for the following &#34;</description>
    </item>
    
    <item>
      <title>Django&#39;s makemessages sucks for my use cases</title>
      <link>/blog/2009/11/12/djangos-makemessages-sucks-for-my-use-cases/</link>
      <pubDate>Thu, 12 Nov 2009 20:57:19 -0200</pubDate>
      
      <guid>/blog/2009/11/12/djangos-makemessages-sucks-for-my-use-cases/</guid>
      <description>Yet another angry rant, caused, of course, by using Django in anger. Nothing wrong with using something in anger, that&#39;s the real way I learn something. Zope 3 even has an online book on how to use it in anger.
That said, Django&#39;s makemessages administrative command sucks by being way too inflexible to anything but the ideal Django development environment. My environment looks like this: I have a project based on Pinax, which I&#39;m developing and deploying using zc.</description>
    </item>
    
    <item>
      <title>Questioning the quality of code in Django third-party projects</title>
      <link>/blog/2009/10/07/questioning-the-quality-of-code-in-django-third-party-projects/</link>
      <pubDate>Wed, 07 Oct 2009 19:17:32 -0300</pubDate>
      
      <guid>/blog/2009/10/07/questioning-the-quality-of-code-in-django-third-party-projects/</guid>
      <description>I&#39;m not sure how I feel about this... In some ways, I think it&#39;s very positive that a relative newcomer can just jump in and release an opensource project that can be taken and reused by others. Did Django allowed this? That&#39;s very positively PHP-like...
I&#39;m talking about a glimpse at some code that I caught while helping my brother integrate the Diamandas forum to a site he&#39;s doing. It stunned me that it has the marks of a developer that is not very experienced with the language or the framework, but it&#39;s moving at a speed that is too great to stop and fix or check what he&#39;s doing.</description>
    </item>
    
    <item>
      <title>Customizing Django LFS (Lightning Fast Shop) for the non-django developer</title>
      <link>/blog/2009/09/17/customizing-django-lfs-lightning-fast-shop-for-the-non-django-developer/</link>
      <pubDate>Thu, 17 Sep 2009 22:59:23 -0300</pubDate>
      
      <guid>/blog/2009/09/17/customizing-django-lfs-lightning-fast-shop-for-the-non-django-developer/</guid>
      <description>I&#39;m not a Django developer, but I have a project that involves deploying a LFS site, and it took me a bit of time and effort to understand how to customize its templates and resources. This all may seem obvious to the any Django developer, but I&#39;m not, so I think this info needs to be out there.
As a side note, at first I have reviewed Satchmo, as it seemed to have more traction in the Django community (being a Zope/Plone developer, I am more aware of the previous work done by the LFS developer, the EasyShop).</description>
    </item>
    
    <item>
      <title>ReportLab is one frustrating piece of software...</title>
      <link>/blog/2009/08/05/reportlab-is-one-frustrating-piece-of-software.../</link>
      <pubDate>Wed, 05 Aug 2009 11:39:26 -0300</pubDate>
      
      <guid>/blog/2009/08/05/reportlab-is-one-frustrating-piece-of-software.../</guid>
      <description>I&#39;m starting to grow a strong dislike to it, enough to steer me off Python to JVM, with Jython or Scala. Case in point: its authors considered that it&#39;s appropriate to overload the Paragraph class from the platypus module, to make it accept a form of &#34;xml&#34;. There&#39;s no switch to disable this behavior and its xml handling is something straight out of the 90&#39;s: no namespaces, no validation. What happens for example, when you&#39;re trying to make a paragraph with the text:</description>
    </item>
    
    <item>
      <title>Laughable bug in a new Google Webmaster Tools feature</title>
      <link>/blog/2009/06/11/laughable-bug-in-a-new-google-webmaster-tools-feature/</link>
      <pubDate>Thu, 11 Jun 2009 15:53:16 -0300</pubDate>
      
      <guid>/blog/2009/06/11/laughable-bug-in-a-new-google-webmaster-tools-feature/</guid>
      <description>Somebody at Google has screwed up in a laughable manner. Webmaster Tools just got a new feature: the ability to tell Google that you have moved a site to a new domain. I&#39;m in the same situation with one site that I manage: www.caleidoscop.org.ro has been moved recently to www.caleidoscop.org. Although I have done my best (I still need to persuade nginx to generate 301 redirects instead of 302) to ease this transition and absolutely everything pointing to the .</description>
    </item>
    
    <item>
      <title>My new blog dedicated to all things VIM</title>
      <link>/blog/2009/05/10/my-new-blog-dedicated-to-all-things-vim/</link>
      <pubDate>Sun, 10 May 2009 18:45:45 -0300</pubDate>
      
      <guid>/blog/2009/05/10/my-new-blog-dedicated-to-all-things-vim/</guid>
      <description>I&#39;ve opened a new blog, at http://vimzone.pixelblaster.ro It runs on the latest Plone 3, with the NottreDamme skin and Scrawl as the blogging product. I&#39;ll probably install also the QuillsEnabled extension. There&#39;s not a lot of content on it, although it&#39;s already almost 2 months old. It&#39;s a place for me to scribble things I know about VIM and use or discover.</description>
    </item>
    
    <item>
      <title>The sorry state of internationalization in Plone</title>
      <link>/blog/2009/04/16/the-sorry-state-of-internationalization-in-plone/</link>
      <pubDate>Thu, 16 Apr 2009 17:32:14 -0300</pubDate>
      
      <guid>/blog/2009/04/16/the-sorry-state-of-internationalization-in-plone/</guid>
      <description>Ever since Plone 2.5 stopped being the hot new thing in the Plone world, the state of content internationalization support in Plone has been declining. Partly due to the difficulty of extending Zope 2 products, LinguaPlone has always been a hack, but at least back then it worked. These days I&#39;m not heavily involved with Plone, but whenever I need to add LinguaPlone to a Plone 3 site, I cringe and weep, especially that those projects never allocate time for me to fix the obvious problems.</description>
    </item>
    
    <item>
      <title>Success on a one year old problem installing CacheFu</title>
      <link>/blog/2009/02/28/success-on-a-one-year-old-problem-installing-cachefu/</link>
      <pubDate>Sat, 28 Feb 2009 17:47:14 -0200</pubDate>
      
      <guid>/blog/2009/02/28/success-on-a-one-year-old-problem-installing-cachefu/</guid>
      <description>I&#39;ve upgraded CacheFu (Products.CacheSetup) to the latest 1.2 for some of the websites that I manage, in a Plone 2.5 cluster. One of them had a problem that I haven&#39;t been able to track previously, due to limited time: on a reinstall of CacheSetup, due to product upgrades, CacheFu couldn&#39;t be installed anymore. The traceback was something like:
this product has already been installed without Quickinstaller!failed: Traceback (most recent call last): File &#34;</description>
    </item>
    
    <item>
      <title>Specific imports versus module imports in Python</title>
      <link>/blog/2008/12/03/specific-imports-versus-module-imports-in-python/</link>
      <pubDate>Wed, 03 Dec 2008 12:05:20 -0200</pubDate>
      
      <guid>/blog/2008/12/03/specific-imports-versus-module-imports-in-python/</guid>
      <description>I&#39;ve always been a fan of explicit, separate imports in Python, vs generic module imports. Maybe it&#39;s because I like things to be explicit, or I&#39;ve been spoiled by the way Eclipse Pydev deals with auto-importing, but I have an aversion towards generic module imports. To keep the code style consistent, I even rewrite to this style any foreign code that ends up in my code.
Specifically, I&#39;m talking about:</description>
    </item>
    
    <item>
      <title>Moving to Intrepid and KDE 4.1</title>
      <link>/blog/2008/11/23/moving-to-intrepid-and-kde-4.1/</link>
      <pubDate>Sun, 23 Nov 2008 21:13:23 -0200</pubDate>
      
      <guid>/blog/2008/11/23/moving-to-intrepid-and-kde-4.1/</guid>
      <description>I&#39;ve migrated my laptop (my main workstation, these days) and I&#39;ve done a complete migration to the KDE 4.1 desktop. Things are not perfect, (on the old KDE 3.5 I&#39;d say things were 99% according to my tastes), but I&#39;m trying to accomodate and find replacements. I didn&#39;t like the KDE 4.1 launcher at first and I&#39;ve even tested Launcelot for a while, but now I&#39;m back to the default menu and I&#39;m starting to like it (on 3.</description>
    </item>
    
    <item>
      <title>Stupid Internet Explorer and stupid IE bugs</title>
      <link>/blog/2008/09/15/stupid-internet-explorer-and-stupid-ie-bugs/</link>
      <pubDate>Mon, 15 Sep 2008 14:38:42 -0300</pubDate>
      
      <guid>/blog/2008/09/15/stupid-internet-explorer-and-stupid-ie-bugs/</guid>
      <description>I&#39;m placing the finishing touches on a web application I&#39;ve been writing on and off for the last year. At last, I&#39;ve reached Internet Explorer bugs, which are usually the last to be fixed. Among several other stupid but documented bugs, I&#39;ve found one which I couldn&#39;t find documented in a shallow search on Google: it seems IE has an algorithm for comparing strings that is different then the one that is used internally when sorting an array of strings.</description>
    </item>
    
    <item>
      <title>Ubuntu Hardy Heron: some things are bad</title>
      <link>/blog/2008/03/28/ubuntu-hardy-heron-some-things-are-bad/</link>
      <pubDate>Fri, 28 Mar 2008 09:53:44 -0200</pubDate>
      
      <guid>/blog/2008/03/28/ubuntu-hardy-heron-some-things-are-bad/</guid>
      <description>Note to self: always create a root account on Ubuntu. I&#39;ve updated my laptop to Kubuntu Hardy Heron, and while some things worked fine, there are a couple of stupid bugs that chained to make my life hard.
First of all, why did the Network Configuration applet in Settings Manager in KDE saw fit to delete the hostname of my localhost, tibi-laptop, from /etc/hosts? Now I can&#39;t run anything with sudo, as it imediately aborts with an error &#34;</description>
    </item>
    
    <item>
      <title>Why do I use Zope 3?</title>
      <link>/blog/2008/03/19/why-do-i-use-zope-3/</link>
      <pubDate>Wed, 19 Mar 2008 19:33:08 -0200</pubDate>
      
      <guid>/blog/2008/03/19/why-do-i-use-zope-3/</guid>
      <description>I&#39;m in the process of beginning a new project and I&#39;m debating on what framework to use. Of course it will be Zope 3, but why do I use it. Well, it&#39;s sure something that has to do with these facts:
it&#39;s open source, with a strong, mature community around itwhile it&#39;s still actively development, it has a stable API
 it&#39;s written in Python, one of the easiest and most powerful languagesit&#39;s built around a component architecture, which means writing pluggable applications comes naturallysolves the problem of publishing objects through the webeverything is transaction based.</description>
    </item>
    
    <item>
      <title>Updates to Zope &amp; Plone tips section</title>
      <link>/blog/2007/06/05/updates-to-zope--plone-tips-section/</link>
      <pubDate>Tue, 05 Jun 2007 17:45:49 -0300</pubDate>
      
      <guid>/blog/2007/06/05/updates-to-zope--plone-tips-section/</guid>
      <description>I&#39;ve updated the Zope &amp;amp; Plone tips and tutorials section with a bunch of new pages and several additions to the svn.zope.org package listing. I thought it might be interesting to highlight this here, I&#39;m not exactly sure how visible (or interesting!) is that section to the readers of this blog.</description>
    </item>
    
    <item>
      <title>Some thoughts about the purpose of this blog</title>
      <link>/blog/2007/05/28/some-thoughts-about-the-purpose-of-this-blog/</link>
      <pubDate>Mon, 28 May 2007 10:13:49 -0300</pubDate>
      
      <guid>/blog/2007/05/28/some-thoughts-about-the-purpose-of-this-blog/</guid>
      <description>I&#39;ve been thinking lately at the purpose of this blog, what it wants to be, what is really a blog and what I should write here. The number of posts have gone down in the last half of year, partly due to increased work load and partly due to some restructuring that I have done. In general, I&#39;m unhappy about posting small tips and bits of information on the blog, that&#39;s why I have created a Tips &amp;amp; Tutorials section on this site.</description>
    </item>
    
    <item>
      <title>Running Python based software in the GPU?</title>
      <link>/blog/2007/05/25/running-python-based-software-in-the-gpu/</link>
      <pubDate>Fri, 25 May 2007 09:56:45 -0300</pubDate>
      
      <guid>/blog/2007/05/25/running-python-based-software-in-the-gpu/</guid>
      <description>I&#39;m not a GFX or 3d programmer, but looking at this blog entry, I understand that these guys are getting ready a way to run Python based software in the GPU. I wonder what kind of speed improvements can be achieved through that, although I fear that it&#39;s only going to work for numeric type of programs.</description>
    </item>
    
    <item>
      <title>I hate brackets! (or rants of a JavaScript novice programmer)</title>
      <link>/blog/2007/02/27/i-hate-brackets-or-rants-of-a-javascript-novice-programmer/</link>
      <pubDate>Tue, 27 Feb 2007 17:09:31 -0200</pubDate>
      
      <guid>/blog/2007/02/27/i-hate-brackets-or-rants-of-a-javascript-novice-programmer/</guid>
      <description>Javascript is nice, I&#39;m having fun building this Zope3/Ajax based application that I&#39;m working on right now. What I don&#39;t enjoy is the forest of non-alphanumeric characters that has started to clog my code. I&#39;m really a novice when it comes to Javascript, most of my professional programming has been done with other languages, but look for example at this fragment of code:
 for (i=0; i&amp;lt; parent.childNodes.length; i++) {</description>
    </item>
    
    <item>
      <title>Mylar &#43; Trac: yet another reason to use Eclipse</title>
      <link>/blog/2007/02/25/mylar---trac-yet-another-reason-to-use-eclipse/</link>
      <pubDate>Sun, 25 Feb 2007 19:00:53 -0200</pubDate>
      
      <guid>/blog/2007/02/25/mylar---trac-yet-another-reason-to-use-eclipse/</guid>
      <description>Today I&#39;ve wanted to change something in a trac instance I have setup for a project, when I thought: &#34;I wish there was a way to do this from inside Eclipse&#34;. And there is! After a bit of searching (this information is available from the Trac site), I&#39;ve discovered that Eclipse has a project that handles task based programming, project called Mylar, which has a Trac connector plugin financed through a Google Summer of Code project.</description>
    </item>
    
    <item>
      <title>Laptop memory updated</title>
      <link>/blog/2007/02/25/laptop-memory-updated/</link>
      <pubDate>Sun, 25 Feb 2007 18:53:41 -0200</pubDate>
      
      <guid>/blog/2007/02/25/laptop-memory-updated/</guid>
      <description>Thanks to the friendly guys at RDC Computers (boo Material Computers, who just turned their backs and said that they don&#39;t have it), I&#39;ve upgraded the memory on my laptop. Now things have really started to fly. Before I only had 512 MB of RAM (which had to be shared with the onboard video card), but now I have a really cool 1.5 GB of RAM. I didn&#39;t want to go higher (to 2 GB) because I&#39;m thinking that the 1.</description>
    </item>
    
    <item>
      <title>Onwards to Gnome through Beryl and back to KDE</title>
      <link>/blog/2007/02/21/onwards-to-gnome-through-beryl-and-back-to-kde/</link>
      <pubDate>Wed, 21 Feb 2007 18:35:40 -0200</pubDate>
      
      <guid>/blog/2007/02/21/onwards-to-gnome-through-beryl-and-back-to-kde/</guid>
      <description>I like my Linux to stay &#34;on the edge&#34;, I like the excitement of knowing that on the next update you&#39;ll get new or improved software, which happens a lot in the Open Source world. So I&#39;ve updated yesterday my laptop (a Compaq NX 6125) to the yet unreleased Ubuntu Feisty Fawn, an experienced that took almost 24 hours to have a fully working system at the end. I&#39;ll give some details of the problems encountered below.</description>
    </item>
    
    <item>
      <title>First glance at Plone 3</title>
      <link>/blog/2007/02/11/first-glance-at-plone-3/</link>
      <pubDate>Sun, 11 Feb 2007 12:49:20 -0200</pubDate>
      
      <guid>/blog/2007/02/11/first-glance-at-plone-3/</guid>
      <description>Thanks to the easy plone 3 buildout (plonout), I&#39;m having my first look at the upcoming Plone 3. Some of the more evident changes:
Versioning is now possible thanks to CMFEditions, which means a &#34;Save as version&#34; option in the edit screen and a &#34;Versions&#34; page on objects.
The Kupu integration has been improved, the Kupu configlet offering new functions: the possibility to edit the toolbar, a new, streamlined interface to control the resource types and the possibility to replace the reference browser with a kupu drawer.</description>
    </item>
    
    <item>
      <title>Why do the GIMP developer hate us?</title>
      <link>/blog/2006/12/21/why-do-the-gimp-developer-hate-us/</link>
      <pubDate>Thu, 21 Dec 2006 14:21:47 -0200</pubDate>
      
      <guid>/blog/2006/12/21/why-do-the-gimp-developer-hate-us/</guid>
      <description>I&#39;m working on a website for which I have received PSD templates and I just need to do a Plone skin based on the templates. I&#39;m using GIMP for various tasks, like trimming images, exporting for web, etc. Now that I have mapped some key shortcuts to their old Photoshop equivalents, to which I am used, Gimp seems more bearable. Not by much, though. Why do the Gimp developers decided that it&#39;s a cool and clever idea to develop this application in this way?</description>
    </item>
    
    <item>
      <title>Kde applications vs Gnome applications</title>
      <link>/blog/2006/09/23/kde-applications-vs-gnome-applications/</link>
      <pubDate>Sat, 23 Sep 2006 18:22:43 -0300</pubDate>
      
      <guid>/blog/2006/09/23/kde-applications-vs-gnome-applications/</guid>
      <description>I&#39;m switching a bunch of Gnome daily used apps to their KDE counterparts. Namely I&#39;ve switched from *Liferea to Akregate, from **GnoCHM to KchmViewer and from ***GIMP to Krita (Gimp sucks too much for me in terms of workflow, while Krita is more conventional and less awkward from some points of view). I&#39;m using already using Konversation for IRC (much better then XChat, I&#39;d use Chatzilla but it doesn&#39;t go to the systray), Tellico to keep a database of PS2 games and K3b for burning dvds.</description>
    </item>
    
    <item>
      <title>Trying KDE as the main work desktop</title>
      <link>/blog/2006/09/02/trying-kde-as-the-main-work-desktop/</link>
      <pubDate>Sat, 02 Sep 2006 20:38:22 -0300</pubDate>
      
      <guid>/blog/2006/09/02/trying-kde-as-the-main-work-desktop/</guid>
      <description>Until a year ago, when I had my first hands-on experience with Ubuntu, I was a KDE fan. I still admire the desktop and follow closely the development, but I was so impressed at that time by the uniformity and visual appeal that Gnome, under Ubuntu, offered, that I switched. Recently I found the Gnome desktop to be a bit on the slow on my laptop, so I&#39;ve tried several lighter window managers.</description>
    </item>
    
    <item>
      <title>Tricks of the mind</title>
      <link>/blog/2006/08/12/tricks-of-the-mind/</link>
      <pubDate>Sat, 12 Aug 2006 19:48:21 -0300</pubDate>
      
      <guid>/blog/2006/08/12/tricks-of-the-mind/</guid>
      <description>I&#39;ve been playing in my mind, for the last two days, for no apparent reason, &#34;Birds of a feather&#34; by Phish. I even asked myself at one point what&#39;s with the song that keeps appearing in my mind. Well, I think I found the reason. For the last two days, the first portlet on my customized slashdot homepage was KDENews, which had a news item on a &#34;Birds of a Feather&#34;</description>
    </item>
    
    <item>
      <title>I don&#39;t like the new python.org webpage</title>
      <link>/blog/2006/08/12/i-dont-like-the-new-python.org-webpage/</link>
      <pubDate>Sat, 12 Aug 2006 13:50:59 -0300</pubDate>
      
      <guid>/blog/2006/08/12/i-dont-like-the-new-python.org-webpage/</guid>
      <description>When it first appeared, I said &#34;heh&#34;, but now I don&#39;t like the new python.org webpage. The new page certainly looks a lot more &#39;designed&#39;, but the old one was certainly cute, and had the classic python logo. Where&#39;s that lovely snake? My concern is the overall feel of the page, not its content or internal organization. The present colors are too &#34;4 years ago&#34;, I especially hate that blueish color.</description>
    </item>
    
  </channel>
</rss>